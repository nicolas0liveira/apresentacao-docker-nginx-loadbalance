
events {
    
    # maximo de conecções simultaneas abertas pelo work process
	worker_connections 1024;
}

http {
    
    include /etc/nginx/ssl/global_ssl.conf;

    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    error_page 404 /404.html;
    error_page 500 501 502 503 504 /50X.html;

    upstream red {
        server red:8080;
    }

    upstream blue {
        server blue:8080;
    }

    upstream api {
        server green:8080 weight=2; #W requisicoes antes de mudar
        server aqua:8080;
        server silver:8080 backup; #a flag backup define um server como backup, ou seja, so estará ativo caso de falha dos demais
    }


    server {
        listen 443 ssl;
        server_name red.127.0.0.1.nip.io;

        location / {
            proxy_pass http://red;
        }
    }

    server{
        listen 443 ssl;
        server_name blue.127.0.0.1.nip.io;

        location / {
            proxy_pass http://blue;
        }
    }

    server{
        listen 443 ssl;
        server_name api.127.0.0.1.nip.io;

        location / {
            proxy_pass http://api;
        }
    }


    #apenas para redirecionar permanentemente (HTTP 301) as requisiçoes HTTP (80) para  HTTPS (443 ssl)
    server {
        listen 80 default_server;
        server_name _; # Este server_name pega todas as solicitações

        # Redireciona todas as solicitações HTTP para HTTPS
        return 301 https://$host$request_uri;
    }

    #server padrao
    server {
        
        listen 443 ssl default_server;
        server_name _; # Responde a qualquer solicitação de servidor não correspondida
        return 404; # Ou redirecione para o local desejado
    }

    

    access_log /var/log/nginx/access.log;

}